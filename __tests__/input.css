@import url("/__tests__/import.css") (prefers-color-scheme: dark);

/* postcss-trigonometric-functions */
.trigonometry {
  line-height: sin(pi / 4);
  line-height: cos(0.125turn);
  line-height: tan(50grad);
  transform: rotate(asin(-1));
  transform: rotate(asin(sin(30deg + 1.0471967rad)));
  transform: rotate(acos(-1));
  transform: rotate(acos(cos(0 / 2 + 1 - 1)));
  transform: rotate(atan(infinity));
  transform: rotate(atan(e - 2.7182818284590452354));
  transform: rotate(atan2(-infinity, -infinity));
  transform: rotate(atan2(-infinity, infinity));
  transform: rotate(atan2(-infinity, infinity));
  transform: rotate(atan2(90, 15));
}

/* postcss-stepped-value-functions */
.test-functions {
  padding: 8px mod(18px, 5px) 1px calc(rem(15px, 6px) + 50%);
  transform: rotate(mod(-140deg, -90deg));
  top: round(15px, 4px);
  right: round(nearest, 15px, 4px);
  bottom: round(up, 15px, 7px);
  left: round(down, 15px, 4px);
  width: round(to-zero, 15px, 4px);
}

/* postcss-opacity-percentage */
.foo {
  opacity: 45%;
}

/* postcss-font-family-fangsong */
body {
  font: 16pt/28pt fangsong;
}

/* postcss-clamp */
.foo {
  width: clamp(10px, 4em, 80rem);
}

.bar {
  width: clamp(10em, 4px, 10px);
}

.bars {
  width: clamp(10px, 4px, 10px);
}

/* postcss-nth-child-fix */
.foo:nth-child(n) {
  color: blue;
}

/* postcss-will-change */
.foo {
  will-change: transform;
}

/* postcss-font-format-keywords */
@font-face {
  src: url(file.woff2) format(woff2);
}

/* postcss-flexbugs-fixes */
.foo {
  flex: 1;
}
.bar {
  flex: 1 1;
}
.foz {
  flex: 1 1 0;
}
.baz {
  flex: 1 1 0px;
}

.foy {
  flex: 1 1 0%;
}

.fox {
  flex: 1 0 calc(1vw - 1px);
}

/* postcss-safe-area */
.foo {
  padding-top: env(safe-area-inset-top);
  margin: 5em 5em calc(5em + env(safe-area-inset-bottom)) 5em;
}

/* postcss-calc */
h1 {
  font-size: calc(16px * 2);
  height: calc(100px - 2em);
  width: calc(2 * var(--base-width));
  margin-bottom: calc(16px * 1.5);
}

/* postcss-clip-path-polyfill */
.test1 {
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

/* postcss-redundant-color-vars */
.foo {
  border: 1px solid hsla(var(--primary-color), 0.5);
}

.bar {
  box-shadow: inset 1px 1px 4px rgb(var(--secondary-color));
}

/* postcss-ic-unit */
p {
  text-indent: 2ic;
}

.bubble {
  width: calc(8ic + 20px);
}

/* pixrem */
.sky {
  margin: 2.5rem 2px 3em 100%;
  color: blue;
}

@media screen and (min-width: 20rem) {
  .leaf {
    margin-bottom: 1.333rem;
    font-size: 1.5rem;
  }
}

/* postcss-normalize-display-values */
.element {
  display: inline flow-root;
}

/* postcss-replace-overflow-wrap */
.overflow-wrap {
  overflow-wrap: break-word;
}

/* postcss-overflow-shorthand */
html {
  overflow: hidden auto;
}

.important {
  overflow-x: overlay;
  overflow: hidden auto !important;
}

.important-alt {
  overflow-x: overlay !important;
  overflow: hidden auto;
}

/* postcss-overflow-clip */
.overflow-clip {
  overflow: clip;
}

.overflow-hidden {
  overflow: hidden;
}

/* overflow-combined */
.overflow-combined-1 {
  overflow: clip hidden;
}

.overflow-combined-2 {
  overflow: clip auto;
}

/* postcss-hwb-function */
.full-modern {
  color: hwb(150 0% 0%);
}

.alpha-modern {
  color: hwb(250 0% 0% / 0.5);
}

.existing-fallback {
  color: rgba(0, 170, 255, 0.5);
  color: hwb(200 0% 0% / 0.5);
}

/* postcss-color-function */
.color {
  color: color(display-p3 0.64331 0.19245 0.16771);
}

:root {
  --a-color: color(srgb 0.64331 0.19245 0.16771);
}

/* postcss-color-mod-function */
:root {
  --brand-red: color-mod(yellow blend(red 50%));
  --brand-red-hsl: color-mod(yellow blend(red 50% hsl));
  --brand-red-hwb: color-mod(yellow blend(red 50% hwb));
  --brand-red-dark: color-mod(red blackness(20%));
}

/* postcss-color-rebeccapurple */
.heading {
  color: rebeccapurple;
}

/* postcss-oklab-function */
p {
  color: oklab(72.322% -0.0465 -0.115);
  background-color: oklch(72.322% 0.12403 247.996);
}

/* postcss-lab-function */
.color-lab {
  color: lab(40% 56.6 39);
}

.color-lab-outside-srgb {
  color: lab(40% 80 39);
}

.color-lch {
  color: lch(40% 68.735435 34.568626);
}

/* postcss-color-hex-alpha */
body {
  background: #9d9c;
}

/* postcss-color-gray */
header {
  background-color: gray(100);
  color: gray(0 / 90%);
}

/* postcss-color-functional-notation */
:root {
  --firebrick: rgb(178 34 34);
  --firebrick-a50: rgb(70% 13.5% 13.5% / 50%);
  --firebrick-hsl: hsla(0 68% 42%);
  --firebrick-hsl-a50: hsl(0 68% 42% / 50%);
}

/* postcss-selector-not */
p:not(:first-child, .special) {
  color: red;
}

/* postcss-pseudo-any */
.bar,
:is(.good),
:matches(.well),
[class^="base-"]:any(a),
:any(p, ul, ol),
.foo {
  color: blue;
}

/* is pseudo class */
.foobar-is:is(.bar-is, .foo-is) {
  color: blue;
}

.foobar-iS:is(.bar-iS, .foo-iS) {
  color: blue;
}

body:is(#awesome) {
  order: 1;
}

/* matches pseudo class */
.foobar-matches:matches(.bar-matches, .foo-matches) {
  color: lime;
}

/* csstools-matches pseudo class */
.foobar-csstools-matches:-csstools-matches(.bar-csstools-matches, .foo-csstools-matches) {
  color: pink;
}

/* -moz-any pseudo class */

.foobar-moz-any:-moz-any(.bar-moz-any, .foo-moz-any) {
  color: yellow;
}

/* -webkit-any pseudo class */

.foobar-webkit-any:-webkit-any(.bar-webkit-any, .foo-webkit-any) {
  color: orange;
}

/* any pseudo class */

.foobar-any:any(.bar-any, .foo-any) {
  color: green;
}

/* where pseudo class */

.foobar-where:where(.bar-where, .foo-where) {
  color: red;
}

/* postcss-pseudo-class-any-link */
nav :any-link > span {
  background-color: yellow;
}

/* postcss-place */
.example {
  place-self: center;
  place-content: space-between center;
}

/* postcss-page-break */
.foo {
  break-inside: avoid;
  break-after: page;
}

/* postcss-custom-selectors */
@custom-selector :--heading h1, h2, h3;

article :--heading + p {
  margin-top: 0;
}

/* postcss-nesting */
a,
b {
  color: red;

  & c,
  & d {
    color: white;
  }
}

button > a,
article ~ a {
  color: red;

  & > div,
  & + span {
    color: white;
  }
}

/* postcss-media-minmax */
@media screen and (500px <= width <= 1200px) {
  .bar {
    display: block;
  }
}

/* postcss-custom-media */
@custom-media --small-viewport (max-width: 30em);

@media (--small-viewport) {
  .postcss-custom-media-test {
    color: red;
  }
}

/* postcss-font-variant */
h2 {
  font-variant-caps: small-caps;
}

table {
  font-variant-numeric: lining-nums;
}

/* postcss-text-decoration-shorthand */
.example {
  text-decoration: wavy underline purple 25%;
}

.example2 {
  text-decoration: underline;
  text-decoration-style: dotted;
}

/* postcss-custom-properties */
:root {
  --color: red;
}

h1 {
  color: var(--color);
}

.variable-test1 {
  --test: red;
  color: var(--test, green);
}

.variable-test2 {
  --test2: red;
  color: var(--test2);
}

.variable-test3 {
  color: var(--test3, green);
}

.variable-test4 {
  color: var(--test4);
}

/* postcss-double-position-gradients */
.linear-gradient {
  background-image: linear-gradient(90deg, black 25% 50%, blue 50% 75%);
}

.conic-gradient {
  background-image: conic-gradient(yellowgreen 40%, gold 0deg 75%, #f06 0deg);
}

/* postcss-font-family-system-ui */
.system-ui {
  font-family: system-ui;
}

/* specific-use comma rgb values */
.test {
  color: rgb(125.4 125.5 125.6);
}

/* specific-use inset-inline-start */
.foo {
  inset-inline-start: 8px;
}

/* specific-use image-set */
.image-set {
  background-image: image-set(url(img/test.png) 1x, url(img/test-2x.png) 2x, url(my-img-print.png) 600dpi);
}

/* specific-use z-index */
.test-z-index {
  z-index: 50;
}

/* specific-use alpha-value percentage */
.test-alpha-value {
  opacity: 20%;
  background-color: rgba(128, 130, 132, 20%);
  color: rgb(12 40 80 / 20%);
}

/* specific-use mess */
.test__ten {
  position: relative;
  display: inline-block;
  height: 20px;
  outline-offset: 2px;
}

.test__ten::before {
  content: "";
  position: relative;
  top: 3px;
  display: inline-block;
  vertical-align: top;
  width: 36px;
  height: 14px;
  border-radius: 7px;
  background-color: currentColor;
  filter: opacity(0.125);
  transition:
    background-position 100ms,
    filter 100ms;
}

.test__eleven:checked + .test__ten::before {
  background-color: var(--ccc-accent-color, currentColor);
  filter: opacity(0.5);
}

.test__ten::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  background-color: rgb(255 255 255);
  color: rgb(255 255 255);
  font:
    700 12px Arial,
    sans-serif; /* stylelint-disable-line declaration-property-value-allowed-list */
  box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.4);
  transition:
    background-color 100ms,
    -webkit-transform 100ms;
}

.test__eleven:checked + .test__ten::after {
  background-color: var(--ccc-accent-color, currentColor);
  transform: translateX(16px);
}

.test__eleven:focus + .test__ten {
  outline: 2px solid currentColor;
}

.test__eleven:not(:focus-visible) + .test__ten {
  outline-color: transparent;
}

.test__twelve {
  display: inline-block;
  vertical-align: top;
  width: calc(100% - 56px);
  margin-inline-start: 1rem;
  padding: 1px 0;
}

.test__twenty {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  margin: 4px;
  fill: currentColor;
  transition:
    transform 100ms,
    fill 100ms;
}

.test__eleven:checked + .test__ten > .test__twenty {
  color: rgb(255 255 255);
  transform: translateX(16px);
}

[dir="rtl"] .test__eleven + .test__ten::after,
[dir="rtl"] .test__eleven + .test__ten > .test__ten__twenty {
  transform: translateX(16px);
}

[dir="rtl"] .test__eleven:checked + .test__ten::after,
[dir="rtl"] .test__eleven:checked + .test__ten > .test__twenty {
  transform: none;
}

.test:not(.test--icon) > .test__eleven:checked + .test__ten::after {
  content: "I"; /* stylelint-disable-line declaration-property-value-allowed-list */
}

@media (forced-colors: active) {
  .test__eleven {
    display: inline-block;
  }

  .test__ten {
    display: none;
  }
}

@media (prefers-color-scheme: dark) {
  .test__ten::after {
    background-color: rgb(218 220 224);
  }

  .test__eleven:not(:checked) + .test__ten::before {
    filter: opacity(0.25);
  }
}
